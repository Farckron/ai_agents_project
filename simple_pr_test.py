#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–∏–π —Ç–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è PR —á–µ—Ä–µ–∑ process_request endpoint
"""

import requests
import json
import os
from dotenv import load_dotenv

load_dotenv()

def create_simple_pr():
    """–°—Ç–≤–æ—Ä–∏—Ç–∏ –ø—Ä–æ—Å—Ç–∏–π PR —á–µ—Ä–µ–∑ process_request"""
    
    # –ó–∞–ø–∏—Ç –Ω–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ø—Ä–æ—Å—Ç–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞
    request_data = {
        "request": """–°—Ç–≤–æ—Ä–∏ –ø—Ä–æ—Å—Ç–∏–π Python –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä —É —Ñ–∞–π–ª—ñ calculator.py –∑ –Ω–∞—Å—Ç—É–ø–Ω–∏–º–∏ —Ñ—É–Ω–∫—Ü—ñ—è–º–∏:

1. –§—É–Ω–∫—Ü—ñ—è add(a, b) –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
2. –§—É–Ω–∫—Ü—ñ—è subtract(a, b) –¥–ª—è –≤—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è  
3. –§—É–Ω–∫—Ü—ñ—è multiply(a, b) –¥–ª—è –º–Ω–æ–∂–µ–Ω–Ω—è
4. –§—É–Ω–∫—Ü—ñ—è divide(a, b) –¥–ª—è –¥—ñ–ª–µ–Ω–Ω—è (–∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –Ω–∞ –Ω—É–ª—å)
5. –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è main() –∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–º –º–µ–Ω—é
6. –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ –¥–ª—è –Ω–µ–∫–æ—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤–≤–æ–¥—É

–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–æ–≤–∏–Ω–µ–Ω –ø—Ä–∞—Ü—é–≤–∞—Ç–∏ –≤ —Ü–∏–∫–ª—ñ –¥–æ —Ç–∏—Ö –ø—ñ—Ä, –ø–æ–∫–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á –Ω–µ –≤–∏–±–µ—Ä–µ –≤–∏—Ö—ñ–¥.""",
        
        "repo_url": f"https://github.com/{os.getenv('GITHUB_OWNER')}/{os.getenv('GITHUB_REPO')}",
        "create_pr": True,
        "pr_options": {
            "branch_name": "feature/python-calculator",
            "pr_title": "Add Python Calculator",
            "pr_description": "Added simple interactive Python calculator with basic arithmetic operations",
            "base_branch": "main"
        }
    }
    
    print("üßÆ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Python –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ process_request...")
    print(f"–†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π: {request_data['repo_url']}")
    print("-" * 60)
    
    try:
        response = requests.post(
            "http://localhost:5000/api/process_request",
            headers={"Content-Type": "application/json"},
            json=request_data,
            timeout=120  # –ó–±—ñ–ª—å—à—É—î–º–æ timeout –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–æ–¥—É
        )
        
        print(f"Response Status: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            print("‚úÖ –ó–∞–ø–∏—Ç –æ–±—Ä–æ–±–ª–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ!")
            
            print(f"–°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
            print(f"–¢–∏–ø –æ–±—Ä–æ–±–∫–∏: {result.get('processing_type', 'unknown')}")
            print(f"–ó–º—ñ–Ω–∏ –≤–Ω–µ—Å–µ–Ω–æ: {result.get('changes_made', False)}")
            
            # –î–µ—Ç–∞–ª—ñ PR —è–∫—â–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ
            if 'pr_result' in result:
                pr_info = result['pr_result']
                print(f"PR —Å—Ç–∞—Ç—É—Å: {pr_info.get('status', 'unknown')}")
                if 'pr_url' in pr_info:
                    print(f"üîó PR URL: {pr_info['pr_url']}")
            
            # –î–µ—Ç–∞–ª—ñ –∞–Ω–∞–ª—ñ–∑—É
            if 'analysis' in result:
                analysis = result['analysis']
                print(f"–ê–Ω–∞–ª—ñ–∑: {analysis.get('analysis', 'N/A')[:100]}...")
            
            # –î–µ—Ç–∞–ª—ñ –∫–æ–¥—É
            if 'code_result' in result:
                code_result = result['code_result']
                print(f"–ö–æ–¥ —Å—Ç–∞—Ç—É—Å: {code_result.get('status', 'unknown')}")
                
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É:")
            try:
                error_data = response.json()
                print(json.dumps(error_data, indent=2))
            except:
                print(f"Raw error: {response.text}")
    
    except requests.exceptions.Timeout:
        print("‚ùå Timeout - –∑–∞–ø–∏—Ç –∑–∞–π–Ω—è–≤ –∑–∞–Ω–∞–¥—Ç–æ –±–∞–≥–∞—Ç–æ —á–∞—Å—É (>120 —Å–µ–∫)")
        print("–¶–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –ø–µ—Ä—à–æ–≥–æ –∑–∞–ø–∏—Ç—É –∑ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—î—é –∫–æ–¥—É")
    except requests.exceptions.ConnectionError:
        print("‚ùå –ù–µ –≤–¥–∞–ª–æ—Å—è –ø—ñ–¥–∫–ª—é—á–∏—Ç–∏—Å—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞")
    except Exception as e:
        print(f"‚ùå –ü–æ–º–∏–ª–∫–∞: {e}")

if __name__ == "__main__":
    print("üöÄ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è PR —á–µ—Ä–µ–∑ process_request")
    print("=" * 60)
    
    create_simple_pr()
    
    print("\n" + "=" * 60)
    print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")