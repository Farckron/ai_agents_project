#!/usr/bin/env python3
"""
–§—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞ —á–µ—Ä–µ–∑ API
"""

import requests
import json
import time
import os
from dotenv import load_dotenv

load_dotenv()

def create_calculator_pr():
    """–°—Ç–≤–æ—Ä–∏—Ç–∏ PR –∑ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º"""
    
    print("üßÆ –°—Ç–≤–æ—Ä–µ–Ω–Ω—è PR –∑ Python –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º")
    print("=" * 50)
    
    # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ —Å–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î
    try:
        status_response = requests.get("http://localhost:5000/api/status", timeout=5)
        if status_response.status_code != 200:
            print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î")
            return
        print("‚úÖ –°–µ—Ä–≤–µ—Ä –ø—Ä–∞—Ü—é—î")
    except:
        print("‚ùå –°–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π. –ó–∞–ø—É—Å—Ç—ñ—Ç—å: python main.py")
        return
    
    # –°—Ç–≤–æ—Ä—é—î–º–æ –∑–∞–ø–∏—Ç –Ω–∞ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä
    calculator_request = {
        "user_request": """–°—Ç–≤–æ—Ä–∏ —Ñ–∞–π–ª calculator.py –∑ –ø—Ä–æ—Å—Ç–∏–º Python –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–æ–º:

–§—É–Ω–∫—Ü—ñ—ó:
- add(a, b) - –¥–æ–¥–∞–≤–∞–Ω–Ω—è
- subtract(a, b) - –≤—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è  
- multiply(a, b) - –º–Ω–æ–∂–µ–Ω–Ω—è
- divide(a, b) - –¥—ñ–ª–µ–Ω–Ω—è –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –Ω–∞ –Ω—É–ª—å
- main() - –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é –∑ —Ü–∏–∫–ª–æ–º

–ö–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –ø–æ–≤–∏–Ω–µ–Ω:
1. –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ –º–µ–Ω—é –æ–ø–µ—Ä–∞—Ü—ñ–π
2. –ó–∞–ø–∏—Ç—É–≤–∞—Ç–∏ –¥–≤–∞ —á–∏—Å–ª–∞
3. –í–∏–∫–æ–Ω—É–≤–∞—Ç–∏ –æ–±—Ä–∞–Ω—É –æ–ø–µ—Ä–∞—Ü—ñ—é
4. –ü–æ–∫–∞–∑—É–≤–∞—Ç–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç
5. –ü–æ–≤—Ç–æ—Ä—é–≤–∞—Ç–∏ –¥–æ –≤–∏—Ö–æ–¥—É
6. –û–±—Ä–æ–±–ª—è—Ç–∏ –ø–æ–º–∏–ª–∫–∏ –≤–≤–æ–¥—É""",
        
        "repo_url": f"https://github.com/{os.getenv('GITHUB_OWNER')}/{os.getenv('GITHUB_REPO')}",
        "create_pr": True,
        "pr_options": {
            "branch_name": "feature/add-calculator",
            "pr_title": "Add Python Calculator",
            "pr_description": """# Python Calculator

–î–æ–¥–∞–Ω–æ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑ –±–∞–∑–æ–≤–∏–º–∏ –∞—Ä–∏—Ñ–º–µ—Ç–∏—á–Ω–∏–º–∏ –æ–ø–µ—Ä–∞—Ü—ñ—è–º–∏.

## –§—É–Ω–∫—Ü—ñ—ó:
- ‚úÖ –î–æ–¥–∞–≤–∞–Ω–Ω—è, –≤—ñ–¥–Ω—ñ–º–∞–Ω–Ω—è, –º–Ω–æ–∂–µ–Ω–Ω—è, –¥—ñ–ª–µ–Ω–Ω—è
- ‚úÖ –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–µ –º–µ–Ω—é
- ‚úÖ –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫
- ‚úÖ –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –¥—ñ–ª–µ–Ω–Ω—è –Ω–∞ –Ω—É–ª—å

## –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è:
```bash
python calculator.py
```

---
*–°—Ç–≤–æ—Ä–µ–Ω–æ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ AI Agent System*""",
            "base_branch": "main"
        }
    }
    
    print(f"–†–µ–ø–æ–∑–∏—Ç–æ—Ä—ñ–π: {calculator_request['repo_url']}")
    print("–í—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –∑–∞–ø–∏—Ç...")
    
    try:
        response = requests.post(
            "http://localhost:5000/api/process_request",
            headers={"Content-Type": "application/json"},
            json=calculator_request,
            timeout=180  # 3 —Ö–≤–∏–ª–∏–Ω–∏ –Ω–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –∫–æ–¥—É
        )
        
        print(f"\n–í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
        
        if response.status_code == 200:
            result = response.json()
            
            print("‚úÖ –ó–∞–ø–∏—Ç –æ–±—Ä–æ–±–ª–µ–Ω–æ!")
            print(f"–°—Ç–∞—Ç—É—Å: {result.get('status', 'unknown')}")
            print(f"–¢–∏–ø –æ–±—Ä–æ–±–∫–∏: {result.get('processing_type', 'unknown')}")
            print(f"–ó–º—ñ–Ω–∏ –≤–Ω–µ—Å–µ–Ω–æ: {result.get('changes_made', False)}")
            
            # –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ PR
            if result.get('changes_made') and 'pr_result' in result:
                pr_info = result['pr_result']
                print(f"\nüéâ PR —Å—Ç–≤–æ—Ä–µ–Ω–æ!")
                print(f"PR —Å—Ç–∞—Ç—É—Å: {pr_info.get('status', 'unknown')}")
                
                if 'pr_url' in pr_info:
                    print(f"üîó PR URL: {pr_info['pr_url']}")
                if 'workflow_id' in pr_info:
                    print(f"Workflow ID: {pr_info['workflow_id']}")
            
            # –î–µ—Ç–∞–ª—ñ –∞–Ω–∞–ª—ñ–∑—É
            if 'analysis' in result:
                analysis = result['analysis']
                if analysis.get('changes_needed'):
                    print(f"\nüìù –ê–Ω–∞–ª—ñ–∑: –ü–æ—Ç—Ä—ñ–±–Ω—ñ –∑–º—ñ–Ω–∏")
                    if 'recommendations' in analysis:
                        print(f"–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó: {len(analysis['recommendations'])} –ø—É–Ω–∫—Ç—ñ–≤")
            
            # –î–µ—Ç–∞–ª—ñ –∫–æ–¥—É
            if 'code_result' in result:
                code_result = result['code_result']
                print(f"\nüíª –ì–µ–Ω–µ—Ä–∞—Ü—ñ—è –∫–æ–¥—É: {code_result.get('status', 'unknown')}")
                if 'files' in code_result:
                    files = code_result['files']
                    print(f"–§–∞–π–ª—ñ–≤ —Å—Ç–≤–æ—Ä–µ–Ω–æ: {len(files)}")
                    for filename in files.keys():
                        print(f"  - {filename}")
            
        else:
            print("‚ùå –ü–æ–º–∏–ª–∫–∞ –æ–±—Ä–æ–±–∫–∏ –∑–∞–ø–∏—Ç—É:")
            try:
                error_data = response.json()
                print(json.dumps(error_data, indent=2))
            except:
                print(f"Raw error: {response.text[:500]}")
    
    except requests.exceptions.Timeout:
        print("‚è∞ Timeout - –∑–∞–ø–∏—Ç –∑–∞–π–º–∞—î –±–∞–≥–∞—Ç–æ —á–∞—Å—É")
        print("–¶–µ –Ω–æ—Ä–º–∞–ª—å–Ω–æ –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –∫–æ–¥—É. –°–ø—Ä–æ–±—É–π—Ç–µ –ø—ñ–∑–Ω—ñ—à–µ.")
    except requests.exceptions.ConnectionError:
        print("‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ —Å–µ—Ä–≤–µ—Ä–∞")
    except Exception as e:
        print(f"‚ùå –ù–µ–æ—á—ñ–∫—É–≤–∞–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")

def test_local_calculator():
    """–¢–µ—Å—Ç—É—î–º–æ –ª–æ–∫–∞–ª—å–Ω–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä"""
    
    print("\nüß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞...")
    print("-" * 50)
    
    if os.path.exists("calculator_demo.py"):
        print("‚úÖ –õ–æ–∫–∞–ª—å–Ω–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –∑–Ω–∞–π–¥–µ–Ω–æ: calculator_demo.py")
        print("–î–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∑–∞–ø—É—Å—Ç—ñ—Ç—å: python calculator_demo.py")
        
        # –ü–æ–∫–∞–∑—É—î–º–æ –ø–µ—Ä—à—ñ —Ä—è–¥–∫–∏ –∫–æ–¥—É
        with open("calculator_demo.py", "r", encoding="utf-8") as f:
            lines = f.readlines()[:15]
            print("\n–ü–µ—Ä—à—ñ —Ä—è–¥–∫–∏ –∫–æ–¥—É:")
            for i, line in enumerate(lines, 1):
                print(f"{i:2}: {line.rstrip()}")
            print("...")
    else:
        print("‚ùå –õ–æ–∫–∞–ª—å–Ω–∏–π –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ")

if __name__ == "__main__":
    print("üöÄ –§—ñ–Ω–∞–ª—å–Ω–∏–π —Ç–µ—Å—Ç —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–∞–ª—å–∫—É–ª—è—Ç–æ—Ä–∞")
    print("=" * 60)
    
    create_calculator_pr()
    test_local_calculator()
    
    print("\n" + "=" * 60)
    print("–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print("\n–Ø–∫—â–æ PR —Å—Ç–≤–æ—Ä–µ–Ω–æ —É—Å–ø—ñ—à–Ω–æ, –ø–µ—Ä–µ–≤—ñ—Ä—Ç–µ:")
    print(f"https://github.com/{os.getenv('GITHUB_OWNER')}/{os.getenv('GITHUB_REPO')}/pulls")